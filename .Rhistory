View(data4)
swirl
require(swirl)
swirl()
lubridate
swirl()
install_from_swirl("Manipulating Data with dplyr")
1
swirl()
swirl
swirl()
swirl()
install_from_swirl("Getting_and_Cleaning_Data")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = TRUE)
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
heas(df)
head(df)
head(mydf)
library(dplyr)
packageversion(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,
| r_arch:country)
select(cran,
r_arch:country)
select(cran,
country:r_arch)
cran
select(cran, -time)
select(cran, -(X:size))
-5:20
select(cran, -(X:size))
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, country %in% "== "3.1.1""IN, version<="3.0.2")
filter(cran, country %in% "IN", version<="3.0.2")
filter(cran, country == "IN", version<="3.0.2")
filter(cran, country == "IN", r_version<="3.0.2")
filter(cran, country == "US" | country == "IN"
)
filter(cran, size>100500)
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3, 5, NA, 10)
)
!is.na(c(3, 5, NA, 10)
)
filter(cran, !(is.na(r_version)))
filter(cran, !(is.na(r_version))
)
filter(cran, !is.na(r_version))
cran2<-select(cran,size:ip_ad)
cran2<-select(cran,size:ip_ad)
cran2<-select(cran,"size:ip_ad")
cran2<-select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb= size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,
avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm(mydf)
rm("mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(cran,mean(size))
summarize(by_package,mean(size))
submit()
submit()
tbl
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(pack_sum)
View(top_counts)
top_counts_sorted<-arrange(pack_sum,count)
top_counts_sorted<-arrange(pack_sum,desc(count))
top_counts_sorted<-arrange(top_counts\,desc(count))
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,col=sex_class,into = c("sex","class"))
submit()
submit()
submit()
students3
View(students3)
submit()
submit()
submit()
submit()
?spread
submit()
submit()
extract_numeric("class5")
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
mutate(students3,class=)
submit()
mutate(students3,class=extract_numeric(class))
students4
students3
mutate(students3,class=extract_numeric(class1))
submit()
submit()
studetns3
students3
submit()
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-mutate(passed,status="passed")
failed%>%mutate(status="failed")
failed<-failed%>%mutate(status="failed")
bind_rows(passed,failed)
sat
submit
submit()
submit()
submit()
View(sat)
submit()
submit()
submit()
submit()
submit()
submit()
reset()
swirl()
swirl()
submit()
submit()
?select
submit()
submit()
submit()
submit()
submit()
submit()
?select
submit()
submit()
submit()
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_daytoday()
this_day=today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=1)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12 1975")
dmy(25081985)
ymd("192012")
ymd("19/20/12")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
ymd_hms(dt1)
hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours=1)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc<-now
now("America/New_York")
nyc<-now("America/New_York")
nyc
depart<-
nyc + days(2)
depart
depart<-update(depart,hours=17, minutes=34)
depart
arrive=update(depart,hours=15)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?ointerval
?interval
how_long<-interval(last_time,arrive)
as.period(how_long)
stopwatch()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","cleandata/7.csv")
data<-read.csv("cleandata/7.csv")
View(data)
splitnames=strsplit(names(data),"wgtp")
splitnames(123)
splitnames<-strsplit(names(data),"wgtp")
splitnames(123)
splitnames[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","cleandata/8.csv")
data<-read.csv("cleandata/8.csv")
data<-data[5:330,]
View(data)
res<-mean(as.numeric(data$X.3))
data<-tbl_df(data)
View(data)
res<-mean(as.numeric(data$X.3))
sub(",","",data$X.3)
data$X.3<-sub(",","",data$X.3)
View(data)
data$X.3<-sub(",","",data$X.3)
print(mean(data$X.3))
print(mean(as.numeric(data$X.3)))
print(mean(as.numeric(data$X.3))
View(data)
View(data)
print(mean(as.numeric(data$X.3))
)
print(mean(as.integer(data$X.3))
)
print(mean(as.number(data$X.3))
)
print(mean(as.double(data$X.3)))
data$X.3
print(mean(as.numeric(trimws(data$X.3))))
data$X.3<-trimws(data$X.3)
data$X.3
print(mean(as.numeric(trimws(complete.cases(data$X.3)))))
res<-complete.cases(data$X.3)
res<-subset.dataframe(data,complete.cases(data$X.3))
res<-subset.data.frame(data,complete.cases(data$X.3))
View(res)
mean(res$X.3)
mean(as.numeric(res$X.3))
mean(as.numeric(res$X.3),na.rm=1)
print(mean(as.numeric(trimws(complete.cases(data$X.3))),na.rm=1))
print(mean(as.numeric(trimws(complete.cases(data$X.3))),na.rm=1,trim=1))
data<-read.csv("cleandata/8.csv")
View(data)
data<-data[5:330,5]
data
data<-sub(",","",data)
data
data<-sub(",","",data)
data
mean(data,trim=TRUE,na.rm=TRUE)
data<-trimws(data)
data
data<-sub(".","",data)
data
data<-sub(".","",data)
data
mean(data,trim=TRUE,na.rm=TRUE)
mean(data,na.rm=TRUE)
mean(data,trim=0na.rm=TRUE)
mean(data,trim=0,na.rm=TRUE)
mean(as.numeric(data,trim=0,na.rm=TRUE))
mean(data)
mean(as.numeric(data))
as.numeric(data[1])
as.numeric(data[2])
as.numeric(data[200])
sub("","0",data)
as.numeric(data[200])
as.double (data[200])
data<-read.csv("cleandata/8.csv")
View(data)
data<-data[5:330,]
View(data)
num<-data$X.3
class(num)
mean(num)
num<-trimws(num)
num
num<-num[is_numeric(as.numeric(num))]
num<-num[is_number(as.numeric(num))]
num<-num[is.numeric(as.numeric(num))]
num
is.numeric(as.numeric(num))
num
sub(",","",num)
sub(",","",num)
sub(",","",num)
sub(",","",num)
sub(",","",num)
num
num<-sub(",","",num)
num
num<-sub(",","",num)
num
num<-num[length(num)>2]
num
class(num)
num2<-subset.default(is_numeric(num))
num2<-subset.default(num,is_numeric(num))
num2<-subset.default(num,is_numeric(num[]))
num2<-subset.default(num,is_number(num[]))
num2<-subset.default(num,is.numeric(num))
num2<-subset.default(num,is.numeric(as.numeric(num)))
num2
num2<-subset.default(num,length(num)>2)
num2
num2<-as.numeric(num2)
num2
mean(num2)
mean(num2[1:355])
mean(num2[1:3])
mean(num2[1:5])
num2<-num2[!is.na(num2)]
num2
mean(num2)
View(data)
data2<-subset.data.frame(data,is.numeric(data[,2]))
data2<-subset.data.frame(data,is.numeric(as.numeric(data[,2])))
View(data2)
data2<-subset.data.frame(data,length(data[,2])>0)
View(data)
data2<-data[5:194,]
View(data2)
data2<-data[1:190,]
View(data2)
num<-data2$X.3
res<-sub(",","",res)
res<-sub(",","",res)
res
num<-sub(",","",num)
num
num<-sub(",","",num)
num
num<-sub(" ",","",num)
num<-sub(" ",","",num)
num<-sub(" ","",num)
num<-sub(" ","",num)
num
mean(as.numeric(num))
countryNames<-data2$X.2
grep("United$",countryNames), 3
grep("^United",countryNames), 3
grep("^United",countryNames), 4
grep("United$",countryNames
)
grep("^United",countryNames)
grep("^United",countryNames)
grep("*United",countryNames)
data2<-read.csv("cleandata/6.csv")
data2
View(data2)
View(data)
View(data2)
data3<-inner_join(data,data2,by=c("X","CountryCode)")
)
data3<-inner_join(data,data2,by=c("X","CountryCode"))
View(data)
data3<-inner_join(data,data2,by=c("X"="CountryCode"))
View(data3)
data4<-tbl_df(data3)
notes<-data4$Special.Notes
grep("^Fiscal,notes)
)
grep("^Fiscal",notes)
notes2<-notes[grep("^Fiscal",notes)]
notes2
notes3<-notes[grep("/June/",notes2)]
notes3
notes2
notes3<-notes[grep("June",notes2)]
notes3
notes23
notes2
notes3<-notes[grep("\bJune\b",notes2)]
notes3
print(notes3)
notes3[1]
notes3[2]
notes3[3]
notes3[4]
notes3[6]
notes3[100]
notes3<-notes[grep("\bJune",notes2)]
notes3
notes3<-notes[grep("\b June \b",notes2)]
notes3
notes3<-notes[grep("June",notes2)]
notes3
dummy<-tbl_df(notes3)
dummy<-tbl_df(as.data.frame(notes3))
View(dummy)
notes3<-notes[grep("\\bJune\\b",notes2)]
dummy<-tbl_df(as.data.frame(notes3))
View(dummy)
notes3<-notes[grep("/\bJune/\b",notes2)]
dummy<-tbl_df(as.data.frame(notes3))
notes3<-notes[grep("/\bJune\b/",notes2)]
dummy<-tbl_df(as.data.frame(notes3))
View(dummy)
notes3<-notes[grep("\\<June\\>",notes2)]
View(dummy)
dummy<-tbl_df(as.data.frame(notes3))
grep("\\<June\\>",notes2)
dummy<-tbl_df(as.data.frame(notes2))
notes3<-notes2[grep("\\<June\\>",notes2)]
dummy<-tbl_df(as.data.frame(notes3))
length(notes3)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
data<-tbl_df(sampleTimes)
data<-tbl_df(as.data.frame(sampleTimes))
View(data)
data2<-filter(data,year(sampleTimes)=2012)
data2<-filter(data,year(sampleTimes)==2012)
data2
length(data2)
length(data2[,1])
View(data2)
data2<-filter(data2,day(sampleTimes)=="Monday")
data2
View(data2)
day(data)
day(data$sampleTimes)
data2<-filter(data,year(sampleTimes)==2012)
data2<-filter(data2,day(sampleTimes)==1)
View(data2)
data2<-filter(data,year(sampleTimes)==2012)
data3<-filter(data2,DAY_OF(sampleTimes)=="Monday")
data2<-filter(data2,weekday(sampleTimes)=="Monday")
data2<-filter(data2,weekDay(sampleTimes)=="Monday")
data2<-filter(data2,weekdays(sampleTimes)=="Monday")
data2
